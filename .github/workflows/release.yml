name: Release Workflow

on:
  push:
    tags:
      - 'v*'  # Trigger on tags like v0.1.0, v0.2.0, etc.

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.0

      - name: Build Linux binary
        run: |
          mkdir -p binaries/linux
          GOOS=linux GOARCH=amd64 go build -o binaries/linux/seqcraft-linux cmd/app/main.go

      - name: Build macOS binary
        run: |
          mkdir -p binaries/macOs
          GOOS=darwin GOARCH=amd64 go build -o binaries/macOs/seqcraft-macos cmd/app/main.go

      - name: Build Windows binary
        run: |
          mkdir -p binaries/windows
          GOOS=windows GOARCH=amd64 go build -o binaries/windows/seqcraft.exe cmd/app/main.go

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: binaries/**

  create-release:
    runs-on: ubuntu-latest
    needs: build-binaries
    if: github.actor == 'joushvak17'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: ./binaries

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: |
            Release ${{ github.ref }}
            - Linux: binaries/linux/seqcraft-linux
            - macOS: binaries/macOs/seqcraft-macos
            - Windows: binaries/windows/seqcraft.exe
          files: |
            binaries/linux/seqcraft-linux
            binaries/macOs/seqcraft-macos
            binaries/windows/seqcraft.exe
    
  publish-chocolatey:
    runs-on: windows-latest
    needs: create-release
    if: github.actor == 'joushvak17'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: ./binaries
      
      - name: Verify download
        run: |
          if (Test-Path -Path ./binaries/windows/seqcraft.exe) {
            Write-Host "Windows binary found."
          } else {
            Write-Error "Windows binary not found!"
            exit 1
          }

      - name: Install Chocolatey
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

      - name: Create Chocolatey package
        run: |
          # Create the package structure
          choco new seqcraft --version=${{ github.ref_name }}

          # Copy the Windows binary to the tools directory
          Copy-Item ./binaries/windows/seqcraft.exe -Destination ./seqcraft/tools/

          # Update the chocolateyInstall.ps1 script
          (Get-Content ./seqcraft/tools/chocolateyInstall.ps1).replace('$url = ""', '$url = "https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/seqcraft.exe"') | Set-Content ./seqcraft/tools/chocolateyInstall.ps1

          # Update the nuspec file
          (Get-Content ./seqcraft/seqcraft.nuspec).replace('<version>$version$</version>', '<version>${{ github.ref_name }}</version>') | Set-Content ./seqcraft/seqcraft.nuspec

      - name: Pack Chocolatey package
        run: |
          cd seqcraft
          choco pack

      - name: Publish Chocolatey package
        run: |
          cd seqcraft
          choco push seqcraft.${{ github.ref_name }}.nupkg --api-key=${{ secrets.CHOCOLATEY_API_KEY }}